---
# roles/common/tasks/network_params.yml

- block:
  - name: Configure IPv4 security settings
    ansible.builtin.ansible.builtin.sysctl:
      name: "{{ item.key }}"
      value: "{{ item.value }}"
      state: present
      sysctl_set: true
      sysctl_file: "/etc/sysctl.d/10-ipv4-security.conf"
      reload: true
      with_items:
        - { key: "net.ipv4.ip_forward", value: "0" }                             # Disable IP forwarding
        - { key: "net.ipv4.tcp_syncookies", value: "1" }                         # Enable TCP SYN cookies protection
        - { key: "net.ipv4.tcp_synack_retries", value: "5" }                     # Number of SYN+ACK retries
        - { key: "net.ipv4.conf.all.send_redirects", value: "0" }                # Disable ICMP redirects for all interfaces
        - { key: "net.ipv4.conf.default.send_redirects", value: "0" }            # Disable ICMP redirects for new interfaces
        - { key: "net.ipv4.conf.default.secure_redirects", value: "0" }          # Disable secure ICMP redirects
        - { key: "net.ipv4.conf.all.accept_source_route", value: "0" }           # Disable source routing
        - { key: "net.ipv4.conf.default.accept_source_route", value: "0" }       # Disable source routing for new interfaces
        - { key: "net.ipv4.conf.all.accept_redirects", value: "0" }              # Disable ICMP redirect acceptance
        - { key: "net.ipv4.conf.all.secure_redirects", value: "0" }              # Disable secure ICMP redirect acceptance
        - { key: "net.ipv4.conf.default.accept_redirects", value: "0" }          # Disable redirect acceptance for new interfaces
        - { key: "net.ipv4.conf.all.log_martians", value: "1" }                  # Log packets with impossible addresses
        - { key: "net.ipv4.icmp_echo_ignore_broadcasts", value: "1" }            # Ignore ICMP broadcast requests
        - { key: "net.ipv4.conf.all.rp_filter", value: "1" }                     # Enable source route verification
        - { key: "net.ipv4.conf.default.rp_filter", value: "1" }                 # Enable source route verification for new interfaces
        - { key: "net.ipv4.tcp_rfc1337", value: "1" }                            # Protect against TCP TIME-WAIT assassination
        - { key: "net.ipv4.ip_local_port_range", value: "2000 65000" }           # Define local port range for outgoing connections

  - name: Configure IPv6 security settings
    ansible.builtin.sysctl:
      name: "{{ item.key }}"
      value: "{{ item.value }}"
      state: present
      sysctl_set: true
      sysctl_file: "/etc/sysctl.d/10-ipv6-security.conf"
      reload: true
      with_items:
        - { key: "net.ipv6.conf.default.router_solicitations", value: "0" }      # Disable IPv6 router solicitations
        - { key: "net.ipv6.conf.default.accept_ra_rtr_pref", value: "0" }        # Disable router preference in RA
        - { key: "net.ipv6.conf.default.accept_ra_pinfo", value: "0" }           # Disable prefix info in RA
        - { key: "net.ipv6.conf.default.accept_ra_defrtr", value: "0" }          # Disable default router acceptance
        - { key: "net.ipv6.conf.default.autoconf", value: "0" }                  # Disable IPv6 auto-configuration
        - { key: "net.ipv6.conf.default.dad_transmits", value: "0"}              # Disable duplicate address detection
        - { key: "net.ipv6.conf.default.max_addresses", value: "1" }             # Set maximum number of IPv6 addresses
        - { key: "net.ipv6.conf.default.accept_redirects", value: "0" }          # Disable IPv6 redirects
        - { key: "net.ipv6.conf.all.accept_redirects", value: "0" }              # Disable IPv6 redirects for all interfaces
        - { key: "net.ipv6.conf.default.forwarding", value: "0" }                # Disable IPv6 forwarding
        - { key: "net.ipv6.conf.all.forwarding", value: "0" }                    # Disable IPv6 forwarding for all interfaces

  - name: Disable IPv6 entirely
    ansible.builtin.sysctl:
      name: "{{ item.key }}"
      value: "{{ item.value }}"
      state: present
      sysctl_set: true
      reload: true
      with_items:
        - { key: "net.ipv6.conf.lo.disable_ipv6", value: "1" }                   # Disable IPv6 on loopback
        - { key: "net.ipv6.conf.default.disable_ipv6", value: "1" }              # Disable IPv6 by default
        - { key: "net.ipv6.conf.all.disable_ipv6", value: "1" }                  # Disable IPv6 on all interfaces
